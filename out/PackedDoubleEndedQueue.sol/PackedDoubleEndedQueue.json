{"abi":[{"type":"error","name":"InvalidSlot","inputs":[]},{"type":"error","name":"QueueEmpty","inputs":[]},{"type":"error","name":"QueueFull","inputs":[]},{"type":"error","name":"QueueOutOfBounds","inputs":[]}],"bytecode":{"object":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201bef39567aeaf0ae2fe8fcaa3118889090119d12188892527da4f5c88669654464736f6c63430008140033","sourceMap":"919:4474:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;919:4474:17;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201bef39567aeaf0ae2fe8fcaa3118889090119d12188892527da4f5c88669654464736f6c63430008140033","sourceMap":"919:4474:17:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidSlot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QueueEmpty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QueueFull\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QueueOutOfBounds\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"A sequence of items with the ability to efficiently push and pop items (i.e. insert and remove) on both ends of the sequence (called front and back). Among other access patterns, it can be used to implement efficient LIFO and FIFO queues. Storage use is optimized, and all operations are O(1) constant time. This includes {clear}, given that the existing queue contents are left in storage. The struct is called `Uint16Deque`. And is designed for packed uint16 values, though this approach can be extrapolated to different implementations. This data structure can only be used in storage, and not in memory. ```solidity PackedDoubleEndedQueue.Uint16Deque queue; ```\",\"errors\":{\"InvalidSlot()\":[{\"details\":\"Invalid slot.\"}],\"QueueEmpty()\":[{\"details\":\"An operation (e.g. {front}) couldn't be completed due to the queue being empty.\"}],\"QueueFull()\":[{\"details\":\"A push operation couldn't be completed due to the queue being full.\"}],\"QueueOutOfBounds()\":[{\"details\":\"An operation (e.g. {at}) couldn't be completed due to an index being out of bounds.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/PackedDoubleEndedQueue.sol\":\"PackedDoubleEndedQueue\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@uniswap/v2-periphery/=lib/v2-periphery/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":v2-periphery/=lib/v2-periphery/contracts/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"contracts/lib/PackedDoubleEndedQueue.sol\":{\"keccak256\":\"0xe60e1c6f138ae901c225f5fd9f7b19196797124abe8444cbcea8a5b543c032bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5efaf3e059b1c58a6c0fb7cf1935a7096e42b34f8aa878620b06ff4543017fb7\",\"dweb:/ipfs/QmZmH5erG3WcaTPUa63s12AMqZ4vMk2FdnziqeCZsAeEYD\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"InvalidSlot"},{"inputs":[],"type":"error","name":"QueueEmpty"},{"inputs":[],"type":"error","name":"QueueFull"},{"inputs":[],"type":"error","name":"QueueOutOfBounds"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/=node_modules/@openzeppelin/","@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/","@uniswap/v2-periphery/=lib/v2-periphery/","@uniswap/v3-periphery/=lib/v3-periphery/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","v2-periphery/=lib/v2-periphery/contracts/","v3-periphery/=lib/v3-periphery/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/lib/PackedDoubleEndedQueue.sol":"PackedDoubleEndedQueue"},"evmVersion":"paris","libraries":{}},"sources":{"contracts/lib/PackedDoubleEndedQueue.sol":{"keccak256":"0xe60e1c6f138ae901c225f5fd9f7b19196797124abe8444cbcea8a5b543c032bf","urls":["bzz-raw://5efaf3e059b1c58a6c0fb7cf1935a7096e42b34f8aa878620b06ff4543017fb7","dweb:/ipfs/QmZmH5erG3WcaTPUa63s12AMqZ4vMk2FdnziqeCZsAeEYD"],"license":"MIT"}},"version":1},"id":17}